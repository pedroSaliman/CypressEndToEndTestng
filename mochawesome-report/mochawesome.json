{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-17T13:00:24.733Z",
    "end": "2022-06-17T13:00:51.817Z",
    "duration": 27084,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "06dc18ec-6fe7-4270-a7d3-ab3148e2f0e5",
      "title": "",
      "fullFile": "cypress/integration/newapplication.js",
      "file": "cypress/integration/newapplication.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e731f669-52a1-4e9f-b388-6de720825f1f",
          "title": "Test  Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Enter Info",
              "fullTitle": "Test  Suite Enter Info",
              "timedOut": null,
              "duration": 19214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const home = new _Home.default();\nconst product = new _Product.default();\nconst check = new _Checkout.default();\nvar sum = 0;\ncy.visit(\"https://rahulshettyacademy.com/angularpractice/\");\nhome.getusername().should(\"be.empty\").type(this.datadriven.username);\nhome.getemail().should(\"be.empty\").type(this.datadriven.email);\nhome.getpass().should(\"be.empty\").type(this.datadriven.password);\nhome.getselect().select(this.datadriven.select);\nhome.getconfirm().should(\"have.value\", this.datadriven.username);\nhome.getdisable().should(\"be.disabled\");\nhome.getcheck().check().should(\"be.checked\");\nhome.getsubmitbutton().should(\"be.visible\").click();\nhome.getshopbutton().should(\"be.visible\").click();\nthis.datadriven.products.forEach(function (element) {\n  cy.selectproduct(element);\n});\nproduct.getcheckout().should(\"be.visible\").click();\nproduct.getprice().each(($el, index, $list) => {\n  const txt = $el.text();\n  let result = txt.split(\" \");\n  result = result[1].trim();\n  sum = sum + Number(result);\n}).then(() => {\n  cy.log(sum);\n});\nproduct.gettotalprice().then(ele => {\n  const txt = ele.text();\n  let total = txt.split(\" \");\n  total = total[1].trim();\n  expect(Number(total)).to.eql(sum);\n});\nproduct.getout().should(\"be.visible\").click();\ncheck.gettypecountry().should(\"be.empty\").type(\"France\");\ncheck.getcheck().click();\ncheck.clickcountry().should(\"be.visible\").click();\ncheck.purchase().click();\ncheck.alert().then(element => {\n  const atualtext = element.text();\n  expect(atualtext.includes(\"Success\")).to.be.true;\n});",
              "err": {},
              "uuid": "91fe94ee-3dc0-4138-ba45-a6cbac7d683e",
              "parentUUID": "e731f669-52a1-4e9f-b388-6de720825f1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91fe94ee-3dc0-4138-ba45-a6cbac7d683e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19214,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}